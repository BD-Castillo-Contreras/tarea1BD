/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package oracleconection;

import java.sql.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author JP
 */
public class pantallaElegirCancionCaso7 extends javax.swing.JFrame {
    
    static Connection conn=null;
    /**
     * Creates new form pantallaElegirCancionCaso7
     */
    public pantallaElegirCancionCaso7() {
        initComponents();
    }

public class funcionalidad { 
        private Connection conexion; 

        public Connection getConexion() { 
            return conexion; 
        }    public void setConexion(Connection conexion) { 
            this.conexion = conexion; 
        }  



public funcionalidad conectar() { 
    try { 
        Class.forName("oracle.jdbc.OracleDriver"); 
        String BaseDeDatos = "jdbc:oracle:thin:@localhost:1521:XE"; 
          
        conexion = DriverManager.getConnection(BaseDeDatos, "TAREA1BD","marti");             
        if (conexion != null) { 
            System.out.println("Conexion exitosa!"); 
        } else { 
            System.out.println("Conexion fallida!"); 
        } 
    } catch (Exception e) { 
        e.printStackTrace(); 
    }        return this; 
} 

public boolean escribir(String sql) { 
        try { 
            Statement sentencia; 
            sentencia = getConexion().createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY); 
            sentencia.executeUpdate(sql); 
            getConexion().commit(); 
            sentencia.close(); 
             
        } catch (SQLException e) { 
            e.printStackTrace(); 
            System.out.print("ERROR SQL"); 
            return false; 
        }         
        return true; 
    } 

public ResultSet consultar(String sql) { 
        ResultSet resultado = null; 
        try { 
            Statement sentencia; 
            sentencia = getConexion().createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY); 
            resultado = sentencia.executeQuery(sql); 
             
        } catch (SQLException e) { 
            e.printStackTrace(); 
            return null; 
        }        return resultado; 
    } 

    }    


private DefaultListModel llenarListaCanciones(){
     
    DefaultListModel<String> model = new DefaultListModel<>();
    
    try {
                                
            funcionalidad fDisco = new funcionalidad();
            fDisco.conectar();
            
            ResultSet idDisco = fDisco.consultar("select iddisco from disco where nombre='"+pantallaElegirDiscoCaso7.discoSeleccionado.nombre+"' and año='"+pantallaElegirDiscoCaso7.discoSeleccionado.año+"'");
            idDisco.next();
            
            ResultSet nombreCancion = fDisco.consultar("select nombre from canción where disco_iddisco='"+idDisco.getString(1)+"'");
                                                
            while(nombreCancion.next()){
                                
                model.addElement(nombreCancion.getString(1));
                
            }
            nombreCancion.close();
            idDisco.close();
                                   
        }catch (SQLException e){
            System.out.println(e.getCause());
            JOptionPane.showMessageDialog(this,"Problemas con la consulta!");
        }
   return model;
}    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ELEGIRCANCION = new javax.swing.JPanel();
        textoTitulo = new javax.swing.JLabel();
        botonMostrarCancionesDisco = new javax.swing.JButton();
        pantallaResultados = new javax.swing.JScrollPane();
        resultadosCanciones = new javax.swing.JList();
        botonAgregarCancionSeleccionada = new javax.swing.JButton();
        botonVolverPantallaDisco = new javax.swing.JButton();
        botonVolverMenu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textoTitulo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        textoTitulo.setText("Elegir Cancion para agregar a su lista:");

        botonMostrarCancionesDisco.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonMostrarCancionesDisco.setText("Mostrar canciones del disco");
        botonMostrarCancionesDisco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonMostrarCancionesDiscoActionPerformed(evt);
            }
        });

        pantallaResultados.setViewportView(resultadosCanciones);

        botonAgregarCancionSeleccionada.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonAgregarCancionSeleccionada.setText("Agregar cancion seleccionada a la lista");
        botonAgregarCancionSeleccionada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarCancionSeleccionadaActionPerformed(evt);
            }
        });

        botonVolverPantallaDisco.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonVolverPantallaDisco.setText("Volver a elegir otro Disco");
        botonVolverPantallaDisco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVolverPantallaDiscoActionPerformed(evt);
            }
        });

        botonVolverMenu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonVolverMenu.setText("Volver al Menu");
        botonVolverMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVolverMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ELEGIRCANCIONLayout = new javax.swing.GroupLayout(ELEGIRCANCION);
        ELEGIRCANCION.setLayout(ELEGIRCANCIONLayout);
        ELEGIRCANCIONLayout.setHorizontalGroup(
            ELEGIRCANCIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ELEGIRCANCIONLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(ELEGIRCANCIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoTitulo)
                    .addGroup(ELEGIRCANCIONLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(ELEGIRCANCIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pantallaResultados)
                            .addComponent(botonMostrarCancionesDisco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botonAgregarCancionSeleccionada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botonVolverPantallaDisco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botonVolverMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        ELEGIRCANCIONLayout.setVerticalGroup(
            ELEGIRCANCIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ELEGIRCANCIONLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textoTitulo)
                .addGap(13, 13, 13)
                .addComponent(botonMostrarCancionesDisco)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pantallaResultados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonAgregarCancionSeleccionada)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonVolverPantallaDisco)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonVolverMenu)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ELEGIRCANCION, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ELEGIRCANCION, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonMostrarCancionesDiscoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonMostrarCancionesDiscoActionPerformed
        // TODO add your handling code here:
        resultadosCanciones.setModel(llenarListaCanciones());
    }//GEN-LAST:event_botonMostrarCancionesDiscoActionPerformed

    private void botonVolverMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVolverMenuActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        menuUsuario pUsuario = new menuUsuario();
        pUsuario.setVisible(true);
        pUsuario.pack();
        dispose();
    }//GEN-LAST:event_botonVolverMenuActionPerformed

    private void botonVolverPantallaDiscoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVolverPantallaDiscoActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        pantallaElegirDiscoCaso7 pElegirDiscoCaso7 = new pantallaElegirDiscoCaso7();
        pElegirDiscoCaso7.setVisible(true);
        pElegirDiscoCaso7.pack();
        dispose();
    }//GEN-LAST:event_botonVolverPantallaDiscoActionPerformed

    private void botonAgregarCancionSeleccionadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarCancionSeleccionadaActionPerformed
        // TODO add your handling code here:
        try{
            
            funcionalidad fLista = new funcionalidad(); 
            fLista.conectar();
            ResultSet idLista = fLista.consultar("select idlista from lista where nombre='"+pantallaIngresarLista.nombreLista.nombre+"'");
            idLista.next();
            
            ResultSet idCancion = fLista.consultar("select idCanción from canción where nombre='"+resultadosCanciones.getSelectedValue().toString()+"'");
            idCancion.next();
            
            String sqlinsertar_sigue = "insert into listacanción values (?,?,?)";
            PreparedStatement insercion = conn.prepareStatement(sqlinsertar_sigue);
            insercion.setString(1, null);
            insercion.setString(2, idCancion.getString(1));
            insercion.setString(3, idLista.getString(1));
            insercion.execute();
            insercion.close();
            
            idLista.close();
            idCancion.close();
            
        }catch(SQLException e){
            System.out.println(e.getCause());
            JOptionPane.showMessageDialog(this,"Problemas con ingresar la Canción a la lista");
        }
       
    }//GEN-LAST:event_botonAgregarCancionSeleccionadaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pantallaElegirCancionCaso7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pantallaElegirCancionCaso7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pantallaElegirCancionCaso7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pantallaElegirCancionCaso7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pantallaElegirCancionCaso7().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ELEGIRCANCION;
    private javax.swing.JButton botonAgregarCancionSeleccionada;
    private javax.swing.JButton botonMostrarCancionesDisco;
    private javax.swing.JButton botonVolverMenu;
    private javax.swing.JButton botonVolverPantallaDisco;
    private javax.swing.JScrollPane pantallaResultados;
    private javax.swing.JList resultadosCanciones;
    private javax.swing.JLabel textoTitulo;
    // End of variables declaration//GEN-END:variables
}
